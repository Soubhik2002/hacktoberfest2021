#include<stdio.h>

int optimal_parent(int,int);
int m[20][20],p,s[20][20],a[20];

int matrixchain()
{
	int n,i,l,j,q,k;
	n=p-1;
	for(i=1;i<=n;i++)
	    m[i][i]=0;
	for(l=2;l<=n;l++)
	{
		for(i=1;i<=n-l+1;i++)
		{
			j=i+l-1;
			m[i][j]=99999;
			for(k=i;k<=j-1;k++)
			{
				q=m[i][k]+m[k+1][j]+(a[i-1]*a[k]*a[j]);
				if(q<m[i][j])
				{
					m[i][j]=q;
					s[i][j]=k;
				}
			}
		}
	}
	printf("Matrix chain is:\n");
	for(i=1;i<=n;i++)
	{
		for(j=1;j<=n;j++)
			printf("%d\t",m[i][j]);
		printf("\n");
	}
	printf("S matrix is:\n");
	for(i=1;i<=n;i++)
	{
		for(j=1;j<=n;j++)
			printf("%d\t",s[i][j]);
		printf("\n");
	}
	i=1;
	j=n;
	printf("The optimal solution for matrix multiplication is:\n");
	optimal_parent(i,j);
}

int optimal_parent(int i,int j)
{
	if(i==j)
	  	printf("M%d",i);
	else
	{
		printf("(");
		optimal_parent(i,s[i][j]);
		optimal_parent(s[i][j]+1,j);
		printf(")");	
	}
}

int main()
{
	system("clear");
	int i;
	printf("Enter the number of dimensions:\n");
	scanf("%d",&p);
	printf("\nEnter the values of dimensions:\n");
	for(i=0;i<p;i++)
		scanf("%d",&a[i]);
	matrixchain();
	printf("\n");
return 0;
}
